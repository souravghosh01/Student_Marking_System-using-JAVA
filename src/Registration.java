/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nayan/Sourav
 */
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
         Show_Users_In_JTable();
           Toolkit toolkit = getToolkit();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
     public Connection getConnection()
   {
       Connection con;
       try {
           con = DriverManager.getConnection("jdbc:mysql://localhost/test", "root","");
           return con;
       } catch (Exception e) {
           e.printStackTrace();
           return null;
       }
   }
       public ArrayList<User> getUsersList()
   {
       ArrayList<User> usersList = new ArrayList<User>();
       Connection connection = getConnection();
       
       String query = "SELECT * FROM  `users` ";
       Statement st;
       ResultSet rs;
       
       try {
           st = connection.createStatement();
           rs = st.executeQuery(query);
           User user;
           while(rs.next())
           {
               user = new User(rs.getString("name"),rs.getString("branch"),rs.getString("course"),rs.getInt("year"),rs.getString("id"));
               usersList.add(user);
           }
       } catch (Exception e) {
           e.printStackTrace();
       }
       return usersList;
   }
    public void Show_Users_In_JTable()
   {
       ArrayList<User> list = getUsersList();
       DefaultTableModel model = (DefaultTableModel)jTable_Display_Users.getModel();
       Object[] row = new Object[5];
       for(int i = 0; i < list.size(); i++)
       {
           row[0] = list.get(i).getName();
           row[1] = list.get(i).getBranch();
           row[2] = list.get(i).getCourse();
           row[3] = list.get(i).getYear();
           row[4]=list.get(i).getId();
           
           model.addRow(row);
       }
    }
    public void executeSQlQuery(String query, String message)
   {
       Connection con = getConnection();
       Statement st;
       try{
           st = con.createStatement();
           if((st.executeUpdate(query)) == 1)
           {
               // refresh jtable data
               DefaultTableModel model = (DefaultTableModel)jTable_Display_Users.getModel();
               model.setRowCount(0);
               Show_Users_In_JTable();
               
               JOptionPane.showMessageDialog(null, "Data "+message+" Successfully");
           }else{
               JOptionPane.showMessageDialog(null, "Data Not "+message);
           }
       }catch(Exception ex){
           ex.printStackTrace();
       }
   }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Display_Users = new javax.swing.JTable();
        jbranch = new javax.swing.JTextField();
        jyear = new javax.swing.JTextField();
        jid = new javax.swing.JTextField();
        jname = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_Display_Users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Branch", "Course", "Year", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Display_Users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_UsersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Display_Users);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 30, 390, 400));

        jbranch.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jbranchMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jbranchMouseMoved(evt);
            }
        });
        getContentPane().add(jbranch, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 120, 30));

        jyear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jyearMousePressed(evt);
            }
        });
        jyear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jyearKeyPressed(evt);
            }
        });
        getContentPane().add(jyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 120, 30));

        jid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jidKeyReleased(evt);
            }
        });
        getContentPane().add(jid, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 120, 30));

        jname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jnameKeyReleased(evt);
            }
        });
        getContentPane().add(jname, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 120, 30));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BSC IT", "MSC IT", "MCA", "BCA" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 120, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-restart-48.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 70, 50));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-plus-48.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 50, 50));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-cancel-48.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 60, 50));

        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-go-back-48.png"))); // NOI18N
        jLabel1.setAlignmentY(0.3F);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 50, 40));

        msg.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        msg.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 234, 60, 20));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Student.jpg"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 460));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.setVisible(false);
      AdminPanel obj = new AdminPanel();
      obj.setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String t = (String)jComboBox1.getSelectedItem();
        generateRandomPassword obj = new generateRandomPassword();
         String password = obj.generatePassword(5);
         String query = "INSERT INTO `users`(`name`, `branch`, `course`,`year`,`id`,`password`) VALUES ('"+jname.getText()+"','"+jbranch.getText()+"','"+t+"',"+jyear.getText()+",'"+jid.getText()+"','"+password+"')";
         executeSQlQuery(query, "Inserted");
         JOptionPane.showMessageDialog(null,"Generated Password : "+password);
         
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable_Display_UsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_UsersMouseClicked
        // TODO add your handling code here:
          int i = jTable_Display_Users.getSelectedRow();

        TableModel model = jTable_Display_Users.getModel();
        
         // Display Slected Row In JTextFields
        jname.setText(model.getValueAt(i,0).toString());

        jbranch.setText(model.getValueAt(i,1).toString());

        jyear.setText(model.getValueAt(i,3).toString());

        jid.setText(model.getValueAt(i,4).toString());
    }//GEN-LAST:event_jTable_Display_UsersMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String teup = (String)jComboBox1.getSelectedItem();
        String query = "UPDATE `users` SET `name`='"+jname.getText()+"',`branch`='"+jbranch.getText()+"',`course`='"+teup+"',`year`="+jyear.getText()+" WHERE `id` = '"+jid.getText()+"'";
       executeSQlQuery(query, "Updated");
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   //String query = "DELETE FROM `users` WHERE id = "+jid.getText();
   String query = "DELETE FROM `users` WHERE id = '"+jid.getText()+"'";
         executeSQlQuery(query, "Deleted");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jnameKeyReleased
        int position= jname.getCaretPosition();
       jname.setText(jname.getText().toUpperCase());
       jname.setCaretPosition(position);
        
    }//GEN-LAST:event_jnameKeyReleased

    private void jbranchMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbranchMouseDragged
       
    }//GEN-LAST:event_jbranchMouseDragged

    private void jbranchMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbranchMouseMoved
      jbranch.setText("SCS");        
    }//GEN-LAST:event_jbranchMouseMoved

    private void jyearMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jyearMousePressed
  
    }//GEN-LAST:event_jyearMousePressed

    private void jyearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jyearKeyPressed
              try{
            int i= Integer.parseInt(jyear.getText());
            msg.setText("");
        }
        catch(NumberFormatException el)
        {
            msg.setText("Invalid");
        }
    }//GEN-LAST:event_jyearKeyPressed

    private void jidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jidKeyReleased
         int position= jid.getCaretPosition();
       jid.setText(jid.getText().toUpperCase());
       jid.setCaretPosition(position);
        
    }//GEN-LAST:event_jidKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Display_Users;
    private javax.swing.JTextField jbranch;
    private javax.swing.JTextField jid;
    private javax.swing.JTextField jname;
    private javax.swing.JTextField jyear;
    private javax.swing.JLabel msg;
    // End of variables declaration//GEN-END:variables
}
